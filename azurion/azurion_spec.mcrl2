sort Button = struct start | stop | emergency;
sort Pedal = struct pedal1 | pedal2;
sort Arm = struct arm1 | arm2;
sort JoystickDirection = struct upJ | downJ | leftJ | rightJ;
sort TableDirection = struct upT | downT | forwardsT | backwardsT;
sort ArmDirection = struct upA | downA | forwardsA | backwardsA;
sort ArmRotation = struct clockwise | counterclockwise | transversalforwards | transversalbackwards;

map translatePedaltoArm: Pedal -> Arm;
	translateJoystickToTableMovement: JoystickDirection -> TableDirection;
	translateJoystickToArmMovement: JoystickDirection -> ArmDirection;
	translateJoystickToArmRotation: JoystickDirection -> ArmRotation;
eqn translatePedaltoArm(pedal1) = arm1;
	translatePedaltoArm(pedal2) = arm2;
	translateJoystickToTableMovement(upJ) = upT;
	translateJoystickToTableMovement(downJ) = downT;
	translateJoystickToTableMovement(leftJ) = backwardsT;
	translateJoystickToTableMovement(rightJ) = forwardsT;
	translateJoystickToArmMovement(upJ) = upA;
	translateJoystickToArmMovement(downJ) = downA;
	translateJoystickToArmMovement(leftJ) = backwardsA;
	translateJoystickToArmMovement(rightJ) = forwardsA;
	translateJoystickToArmRotation(upJ) = clockwise;
	translateJoystickToArmRotation(downJ) = counterclockwise;
	translateJoystickToArmRotation(leftJ) = transversalbackwards;
	translateJoystickToArmRotation(rightJ) = transversalforwards;

map boundaryCheckTablePosition: TableDirection # Int -> Bool;
	boundaryCheckArmPosition: ArmDirection -> Bool;
	boundaryCheckArmRotation: ArmRotation -> Bool;
var tablePositionY: Int;
eqn boundaryCheckTablePosition(upT, tablePositionY) = (tablePositionY < 10);

act
	% external actions
	pressButton: Button;
	releaseButton: Button;
    pressPedal: Pedal;
    releasePedal: Pedal;
    weightSensorOn;
    weightSensorOff;
    moveTableJoystick: JoystickDirection;
    moveTable: TableDirection;
    switchOnXray: Arm;
    switchOffXray: Arm;
    moveArmJoystick: Arm # JoystickDirection;
    moveArm: Arm # ArmDirection;
	rotateArmJoystick: Arm # JoystickDirection;
    rotateArm: Arm # ArmRotation;  
	displayXRayImage;       
 
	% internal actions
	% IO <-> XRay
    sendSwitchOnXray: Arm;
    receiveSwitchOnXray: Arm;
	switchOnXrayInternal: Arm;
    sendSwitchOffXray: Arm;
    receiveSwitchOffXray: Arm;
	switchOffXrayInternal: Arm;
	sendXRayImage: Arm;
	receiveXRayImage: Arm;
	transmitXRayImageInternal: Arm;
	% IO <-> Movement
    sendMoveTable: TableDirection;
    receiveMoveTable: TableDirection;
	moveTableInternal: TableDirection;
    sendMoveArm: Arm # ArmDirection;
    receiveMoveArm: Arm # ArmDirection;
	moveArmInternal: Arm # ArmDirection;
    sendRotateArm: Arm # ArmRotation;
    receiveRotateArm: Arm # ArmRotation;
	rotateArmInternal: Arm # ArmRotation;
	displayImage;
        
proc
	IOControl(operationOngoing: Bool, emergencyMode: Bool, patientOnTable: Bool) = 
		  pressButton(start) . 
		  	(patientOnTable && !emergencyMode) -> IOControl(true, emergencyMode, patientOnTable) 
			<> IOControl()
		+ pressButton(stop) . sendSwitchOffXray(arm1) . sendSwitchOffXray(arm2) . IOControl(false, emergencyMode, patientOnTable) 
		+ pressButton(emergency) . sendSwitchOffXray(arm1) . sendSwitchOffXray(arm2) . IOControl(false, true, patientOnTable)
		+ (emergencyMode) -> releaseButton(emergency) . IOControl(operationOngoing, false, patientOnTable) 
		+ weightSensorOn . IOControl(operationOngoing, emergencyMode, true)
		+ weightSensorOff . sendSwitchOffXray(arm1) . sendSwitchOffXray(arm2) . IOControl(operationOngoing, emergencyMode, false)
		+ sum pedal: Pedal. 
			pressPedal(pedal) . 
				(!emergencyMode && operationOngoing && patientOnTable) -> sendSwitchOnXray(translatePedaltoArm(pedal)) . IOControl() 
				<> IOControl()
		+ sum pedal: Pedal. 
			releasePedal(pedal) . sendSwitchOffXray(translatePedaltoArm(pedal)) . IOControl()
		+ sum direction: JoystickDirection. 
			moveTableJoystick(direction) . 
				(!operationOngoing && !emergencyMode) -> sendMoveTable(translateJoystickToTableMovement(direction)) . IOControl() 
				<> IOControl()
		+ sum arm: Arm. 
			(sum direction: JoystickDirection.
				moveArmJoystick(arm, direction) . 
					(!emergencyMode) -> sendMoveArm(arm, translateJoystickToArmMovement(direction)) . IOControl()
					<> IOControl())
		+ sum arm: Arm. 
			(sum direction: JoystickDirection.
				rotateArmJoystick(arm, direction) .
					(!emergencyMode) -> sendRotateArm(arm, translateJoystickToArmRotation(direction)) . IOControl()
					<> IOControl())
		+ sum arm: Arm. 
			receiveXRayImage(arm) . displayXRayImage . IOControl();

	Movement =
		%tablePositionX,
		%tablePositionY,
		%arm1PositionX,
		%arm1PositionY,
		%arm2PositionX,
		%arm2PositionY,
		%arm1RotationX,
		%arm1RotationY,
		%arm2RotationX,
		%arm2RotationY: Int
		  sum direction: TableDirection. receiveMoveTable(direction) . moveTable(direction) . Movement
		+ sum arm: Arm. (sum direction: ArmDirection. receiveMoveArm(arm, direction). moveArm(arm, direction). Movement)
		+ sum arm: Arm. (sum direction: ArmRotation.  receiveRotateArm(arm, direction)   . rotateArm(arm, direction)   . Movement);

	XRayControl(
		XRayOnArm1,
		XRayOnArm2: Bool
		) =
		  receiveSwitchOnXray(arm1) . (!XRayOnArm1) -> switchOnXray(arm1) . XRayControl(true, XRayOnArm2) <> XRayControl()
		+ receiveSwitchOnXray(arm2) . (!XRayOnArm2) -> switchOnXray(arm2) . XRayControl(XRayOnArm1, true) <> XRayControl()
		+ receiveSwitchOffXray(arm1) . (XRayOnArm1) -> switchOffXray(arm1) . XRayControl(false, XRayOnArm2) <> XRayControl()
		+ receiveSwitchOffXray(arm2) . (XRayOnArm2) -> switchOffXray(arm2) . XRayControl(XRayOnArm1, false) <> XRayControl()
		+ (XRayOnArm1) -> sendXRayImage(arm1) . XRayControl()
		+ (XRayOnArm2) -> sendXRayImage(arm2) . XRayControl();

init
	allow(
		{ 
			% internal actions
			switchOnXrayInternal,
			switchOffXrayInternal,
			moveTableInternal,
			moveArmInternal,
			rotateArmInternal,
			transmitXRayImageInternal,
			% external actions
            pressButton, 
            releaseButton,
            pressPedal,
            releasePedal,
            weightSensorOn,
            weightSensorOff,
            moveTableJoystick,
            moveTable,
            switchOnXray,
            switchOffXray,
            moveArmJoystick,
            moveArm,
            rotateArm,
			displayXRayImage
        },
		comm(
			{ 
               sendSwitchOnXray | receiveSwitchOnXray -> switchOnXrayInternal,
               sendSwitchOffXray | receiveSwitchOffXray -> switchOffXrayInternal,
               sendMoveTable | receiveMoveTable -> moveTableInternal,
               sendMoveArm | receiveMoveArm -> moveArmInternal,
               sendRotateArm | receiveRotateArm -> rotateArmInternal,
			   sendXRayImage | receiveXRayImage -> transmitXRayImageInternal
            },
		Movement || IOControl(false, false, false) || XRayControl(false, false)
		)
	);